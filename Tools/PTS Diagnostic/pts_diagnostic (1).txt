@echo off
setlocal enabledelayedexpansion

REM ================================
REM Instagram PTS Diagnostic Tool
REM Analisa timestamps e recomenda configuração
REM ================================

set INPUT_FILE=%1
set OUTPUT_DIR=%~dp1diagnostic_output
set TEMP_DIR=%TEMP%\pts_analysis

if "%INPUT_FILE%"=="" (
    echo.
    echo ╔══════════════════════════════════════╗
    echo ║     Instagram PTS Diagnostic Tool    ║
    echo ╚══════════════════════════════════════╝
    echo.
    echo Usage: pts_diagnostic.bat "video_file.mp4"
    echo.
    echo Este script analisa timestamps do video e recomenda
    echo se deve usar -fflags +genpts para Instagram
    echo.
    exit /b 1
)

if not exist "%INPUT_FILE%" (
    echo ❌ ERRO: Arquivo não encontrado: %INPUT_FILE%
    exit /b 1
)

REM Criar diretórios de trabalho
if not exist "%OUTPUT_DIR%" mkdir "%OUTPUT_DIR%"
if not exist "%TEMP_DIR%" mkdir "%TEMP_DIR%"

echo.
echo ╔══════════════════════════════════════════════════════════════╗
echo ║                   INSTAGRAM PTS DIAGNOSTIC                   ║
echo ╠══════════════════════════════════════════════════════════════╣
echo ║ Analisando: %~nx1
echo ╚══════════════════════════════════════════════════════════════╝
echo.

REM ================================
REM ETAPA 1: Análise Básica do Arquivo
REM ================================
echo [1/6] 📁 Análise básica do arquivo...

ffprobe -v quiet -print_format json -show_format -show_streams "%INPUT_FILE%" > "%TEMP_DIR%\info.json"

REM Extrai informações básicas
for /f "tokens=2 delims=:" %%a in ('findstr "duration" "%TEMP_DIR%\info.json" ^| head -1') do set DURATION=%%a
for /f "tokens=2 delims=:" %%a in ('findstr "avg_frame_rate" "%TEMP_DIR%\info.json"') do set FRAMERATE=%%a
for /f "tokens=2 delims=:" %%a in ('findstr "width" "%TEMP_DIR%\info.json"') do set WIDTH=%%a
for /f "tokens=2 delims=:" %%a in ('findstr "height" "%TEMP_DIR%\info.json"') do set HEIGHT=%%a

set DURATION=%DURATION: =%
set DURATION=%DURATION:"=%
set DURATION=%DURATION:,=%

set FRAMERATE=%FRAMERATE: =%
set FRAMERATE=%FRAMERATE:"=%
set FRAMERATE=%FRAMERATE:,=%

set WIDTH=%WIDTH: =%
set WIDTH=%WIDTH:"=%
set WIDTH=%WIDTH:,=%

set HEIGHT=%HEIGHT: =%
set HEIGHT=%HEIGHT:"=%
set HEIGHT=%HEIGHT:,=%

echo    ✓ Duração: %DURATION%s
echo    ✓ Resolução: %WIDTH%x%HEIGHT%
echo    ✓ Frame Rate: %FRAMERATE%
echo.

REM ================================
REM ETAPA 2: Detecção de Problemas PTS
REM ================================
echo [2/6] 🔍 Detectando problemas de timestamps...

REM Verifica warnings durante análise
ffmpeg -v warning -i "%INPUT_FILE%" -f null - 2> "%TEMP_DIR%\warnings.txt"

set PTS_WARNINGS=0
set DTS_WARNINGS=0
set SYNC_WARNINGS=0

findstr /i "non-monotonous" "%TEMP_DIR%\warnings.txt" >nul 2>&1
if %errorlevel%==0 set /a PTS_WARNINGS+=1

findstr /i "discontinuity" "%TEMP_DIR%\warnings.txt" >nul 2>&1  
if %errorlevel%==0 set /a DTS_WARNINGS+=1

findstr /i "invalid" "%TEMP_DIR%\warnings.txt" >nul 2>&1
if %errorlevel%==0 set /a SYNC_WARNINGS+=1

findstr /i "corrupt" "%TEMP_DIR%\warnings.txt" >nul 2>&1
if %errorlevel%==0 set /a SYNC_WARNINGS+=1

REM Extrai primeiros 100 timestamps para análise
ffprobe -v quiet -select_streams v:0 -show_entries packet=pts_time,dts_time,duration_time -of csv=print_section=0 "%INPUT_FILE%" | head -100 > "%TEMP_DIR%\timestamps.csv"

echo    📊 Análise de warnings:
if %PTS_WARNINGS%==0 (
    echo       ✅ PTS: Nenhum problema detectado
) else (
    echo       ❌ PTS: %PTS_WARNINGS% warning(s) encontrado(s)
)

if %DTS_WARNINGS%==0 (
    echo       ✅ DTS: Nenhum problema detectado  
) else (
    echo       ❌ DTS: %DTS_WARNINGS% warning(s) encontrado(s)
)

if %SYNC_WARNINGS%==0 (
    echo       ✅ SYNC: Nenhum problema detectado
) else (
    echo       ❌ SYNC: %SYNC_WARNINGS% warning(s) encontrado(s)
)

REM ================================
REM ETAPA 3: Análise de Regularidade dos Timestamps
REM ================================
echo.
echo [3/6] 📈 Analisando regularidade dos timestamps...

REM Análise básica dos timestamps (simulada via batch)
set TIMESTAMP_ISSUES=0
set EXPECTED_INTERVAL=0.033333

REM Conta linhas válidas
for /f %%i in ('type "%TEMP_DIR%\timestamps.csv" ^| find /c /v ""') do set FRAME_COUNT=%%i

echo    📊 Análise de timestamps:
echo       🎬 Frames analisados: %FRAME_COUNT%
echo       ⏱️  Intervalo esperado: %EXPECTED_INTERVAL%s (30fps)

REM Verifica se há timestamps suficientes
if %FRAME_COUNT% LSS 10 (
    echo       ⚠️  Poucos frames para análise confiável
    set /a TIMESTAMP_ISSUES+=1
)

REM ================================
REM ETAPA 4: Detecção do Tipo de Source
REM ================================
echo.
echo [4/6] 🎥 Detectando tipo de source...

set SOURCE_TYPE=UNKNOWN
set GENPTS_RECOMMENDED=0

REM Detecção por metadata
ffprobe -v quiet -show_entries format_tags=encoder -of csv=print_section=0 "%INPUT_FILE%" > "%TEMP_DIR%\encoder.txt"

findstr /i "obs" "%TEMP_DIR%\encoder.txt" >nul 2>&1
if %errorlevel%==0 (
    set SOURCE_TYPE=SCREEN_RECORDING
    set GENPTS_RECOMMENDED=1
    echo    🎮 Tipo detectado: Screen Recording ^(OBS^)
    echo       💡 Recomendação: Usar -fflags +genpts
    goto source_detected
)

findstr /i "bandicam\|fraps\|camtasia" "%TEMP_DIR%\encoder.txt" >nul 2>&1
if %errorlevel%==0 (
    set SOURCE_TYPE=SCREEN_RECORDING
    set GENPTS_RECOMMENDED=1
    echo    🎮 Tipo detectado: Screen Recording
    echo       💡 Recomendação: Usar -fflags +genpts
    goto source_detected
)

findstr /i "ffmpeg" "%TEMP_DIR%\encoder.txt" >nul 2>&1
if %errorlevel%==0 (
    set SOURCE_TYPE=FFMPEG_CONVERTED
    echo    🔄 Tipo detectado: Convertido via FFmpeg
    echo       💡 Recomendação: Testar com e sem genpts
    goto source_detected
)

findstr /i "handbrake" "%TEMP_DIR%\encoder.txt" >nul 2>&1
if %errorlevel%==0 (
    set SOURCE_TYPE=HANDBRAKE_CONVERTED
    echo    🔄 Tipo detectado: Convertido via HandBrake
    echo       💡 Recomendação: Provavelmente não precisa genpts
    goto source_detected
)

REM Detecção por características do arquivo
if %WIDTH%==1920 if %HEIGHT%==1080 (
    set SOURCE_TYPE=CAMERA_PHONE
    echo    📱 Tipo detectado: Câmera/Celular ^(1080p^)
    echo       💡 Recomendação: Provavelmente não precisa genpts
    goto source_detected
)

if %WIDTH%==3840 if %HEIGHT%==2160 (
    set SOURCE_TYPE=CAMERA_4K
    echo    📷 Tipo detectado: Câmera 4K
    echo       💡 Recomendação: Provavelmente não precisa genpts
    goto source_detected
)

echo    ❓ Tipo detectado: Desconhecido
echo       💡 Recomendação: Fazer teste A/B

:source_detected

REM ================================
REM ETAPA 5: Decisão Automática
REM ================================
echo.
echo [5/6] 🧠 Decisão automática...

set FINAL_RECOMMENDATION=NO_GENPTS
set CONFIDENCE=LOW

REM Lógica de decisão
if %PTS_WARNINGS% GTR 0 (
    set FINAL_RECOMMENDATION=USE_GENPTS
    set CONFIDENCE=HIGH
    echo    🎯 Decisão: USAR -fflags +genpts
    echo       🔍 Razão: PTS warnings detectados
    goto decision_made
)

if %DTS_WARNINGS% GTR 0 (
    set FINAL_RECOMMENDATION=USE_GENPTS  
    set CONFIDENCE=HIGH
    echo    🎯 Decisão: USAR -fflags +genpts
    echo       🔍 Razão: DTS warnings detectados
    goto decision_made
)

if %GENPTS_RECOMMENDED%==1 (
    set FINAL_RECOMMENDATION=USE_GENPTS
    set CONFIDENCE=MEDIUM
    echo    🎯 Decisão: USAR -fflags +genpts
    echo       🔍 Razão: Tipo de source requer genpts
    goto decision_made
)

if %TIMESTAMP_ISSUES% GTR 0 (
    set FINAL_RECOMMENDATION=TEST_BOTH
    set CONFIDENCE=LOW
    echo    🎯 Decisão: TESTAR AMBOS
    echo       🔍 Razão: Timestamps suspeitos, requer teste
    goto decision_made
)

echo    🎯 Decisão: NÃO USAR -fflags +genpts
echo       🔍 Razão: Nenhum problema detectado
set CONFIDENCE=MEDIUM

:decision_made

REM ================================
REM ETAPA 6: Teste A/B (se necessário)
REM ================================
echo.
echo [6/6] 🧪 Executando teste A/B...

if "%FINAL_RECOMMENDATION%"=="TEST_BOTH" (
    echo    🔬 Realizando teste A/B automático...
    call :run_ab_test
) else (
    echo    ✅ Teste A/B não necessário - decisão confiável
)

REM ================================
REM RELATÓRIO FINAL
REM ================================
echo.
echo ╔══════════════════════════════════════════════════════════════╗
echo ║                        RELATÓRIO FINAL                      ║
echo ╚══════════════════════════════════════════════════════════════╝
echo.
echo 📁 Arquivo: %~nx1
echo 🎥 Tipo: %SOURCE_TYPE%
echo 📊 Confiança: %CONFIDENCE%
echo.
echo 🎯 RECOMENDAÇÃO FINAL:
if "%FINAL_RECOMMENDATION%"=="USE_GENPTS" (
    echo    ✅ USAR: -fflags +genpts
    echo.
    echo 💻 Comando sugerido:
    echo    ffmpeg -i "input.mp4" -fflags +genpts [outros parâmetros] "output.mp4"
) else if "%FINAL_RECOMMENDATION%"=="TEST_BOTH" (
    echo    🧪 TESTAR AMBOS: Com e sem genpts
    echo.
    echo 💻 Comandos para teste:
    echo    ffmpeg -i "input.mp4" [parâmetros] "output_sem_genpts.mp4"
    echo    ffmpeg -i "input.mp4" -fflags +genpts [parâmetros] "output_com_genpts.mp4"
) else (
    echo    ✅ NÃO USAR: -fflags +genpts
    echo.
    echo 💻 Comando sugerido:
    echo    ffmpeg -i "input.mp4" [outros parâmetros] "output.mp4"
)

echo.
echo 📋 Detalhes técnicos salvos em: %OUTPUT_DIR%
echo.

REM Salva relatório detalhado
call :save_report

echo ✅ Análise concluída!
echo.
goto :eof

REM ================================
REM FUNÇÃO: Teste A/B
REM ================================
:run_ab_test
echo       🎬 Criando clips de teste (10 segundos)...

ffmpeg -v quiet -i "%INPUT_FILE%" -t 10 -c copy "%TEMP_DIR%\test_clip.mp4" -y

echo       🔧 Encoding SEM genpts...
ffmpeg -v quiet -i "%TEMP_DIR%\test_clip.mp4" -c:v libx264 -preset fast -crf 23 -c:a aac "%OUTPUT_DIR%\test_sem_genpts.mp4" -y 2>"%TEMP_DIR%\test_a_log.txt"

echo       🔧 Encoding COM genpts...  
ffmpeg -v quiet -i "%TEMP_DIR%\test_clip.mp4" -fflags +genpts -c:v libx264 -preset fast -crf 23 -c:a aac "%OUTPUT_DIR%\test_com_genpts.mp4" -y 2>"%TEMP_DIR%\test_b_log.txt"

REM Analisa logs dos testes
findstr /i "error\|warning" "%TEMP_DIR%\test_a_log.txt" >nul 2>&1
set TEST_A_ISSUES=%errorlevel%

findstr /i "error\|warning" "%TEMP_DIR%\test_b_log.txt" >nul 2>&1  
set TEST_B_ISSUES=%errorlevel%

echo       📊 Resultados do teste A/B:
if %TEST_A_ISSUES%==0 (
    echo          ✅ SEM genpts: Sucesso
) else (
    echo          ❌ SEM genpts: Problemas detectados
)

if %TEST_B_ISSUES%==0 (
    echo          ✅ COM genpts: Sucesso
) else (
    echo          ❌ COM genpts: Problemas detectados
)

REM Atualiza recomendação baseada no teste
if %TEST_A_ISSUES% GTR 0 if %TEST_B_ISSUES%==0 (
    set FINAL_RECOMMENDATION=USE_GENPTS
    set CONFIDENCE=HIGH
    echo          💡 Recomendação atualizada: USAR genpts
) else if %TEST_A_ISSUES%==0 if %TEST_B_ISSUES% GTR 0 (
    set FINAL_RECOMMENDATION=NO_GENPTS
    set CONFIDENCE=HIGH
    echo          💡 Recomendação atualizada: NÃO usar genpts
) else (
    echo          💡 Ambos funcionaram - use SEM genpts ^(mais rápido^)
    set FINAL_RECOMMENDATION=NO_GENPTS
    set CONFIDENCE=MEDIUM
)

echo       🎥 Arquivos de teste salvos em: %OUTPUT_DIR%
echo          - test_sem_genpts.mp4
echo          - test_com_genpts.mp4
echo          - Compare os dois e escolha o melhor

goto :eof

REM ================================
REM FUNÇÃO: Salvar Relatório
REM ================================
:save_report
echo Criando relatório detalhado...

(
echo ================================
echo INSTAGRAM PTS DIAGNOSTIC REPORT
echo ================================
echo.
echo Data/Hora: %date% %time%
echo Arquivo: %INPUT_FILE%
echo.
echo INFORMAÇÕES BÁSICAS:
echo - Duração: %DURATION%s
echo - Resolução: %WIDTH%x%HEIGHT%  
echo - Frame Rate: %FRAMERATE%
echo - Tipo Source: %SOURCE_TYPE%
echo.
echo PROBLEMAS DETECTADOS:
echo - PTS Warnings: %PTS_WARNINGS%
echo - DTS Warnings: %DTS_WARNINGS%
echo - Sync Warnings: %SYNC_WARNINGS%
echo - Timestamp Issues: %TIMESTAMP_ISSUES%
echo.
echo RECOMENDAÇÃO: %FINAL_RECOMMENDATION%
echo CONFIANÇA: %CONFIDENCE%
echo.
echo ARQUIVOS GERADOS:
if exist "%OUTPUT_DIR%\test_sem_genpts.mp4" echo - test_sem_genpts.mp4
if exist "%OUTPUT_DIR%\test_com_genpts.mp4" echo - test_com_genpts.mp4
echo.
echo ================================
) > "%OUTPUT_DIR%\diagnostic_report.txt"

REM Copia logs técnicos
if exist "%TEMP_DIR%\warnings.txt" copy "%TEMP_DIR%\warnings.txt" "%OUTPUT_DIR%\ffmpeg_warnings.txt" >nul
if exist "%TEMP_DIR%\timestamps.csv" copy "%TEMP_DIR%\timestamps.csv" "%OUTPUT_DIR%\timestamps_analysis.csv" >nul
if exist "%TEMP_DIR%\info.json" copy "%TEMP_DIR%\info.json" "%OUTPUT_DIR%\video_info.json" >nul

REM Limpa arquivos temporários
rd /s /q "%TEMP_DIR%" 2>nul

goto :eof